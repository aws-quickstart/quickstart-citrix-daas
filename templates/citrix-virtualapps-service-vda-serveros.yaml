---
AWSTemplateFormatVersion: 2010-09-09
Description: This template deploys a Citrix Server VDA.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Citrix Cloud Configuration
      Parameters:
      - CitrixCustomerId
      - CitrixAPIClientID
      - CitrixAPIClientSecret
      - CitrixResourceLocation
      - CitrixHostingConnectionAWSIAMAccessKey
      - CitrixHostingConnectionAWSIAMSecretKey
      - CitrixHostingConnectionName
      - CitrixCatalogName
      - CitrixDeliveryGroupName
    - Label:
        default: Network Configuration
      Parameters:
      - PrivateVDASubnet1
      - PrivateVDASubnet2
    - Label:
        default: Amazon EC2 Configuration
      Parameters:
      - KeyPairName
      - CitrixVDAInstanceType
      - CitrixVDAWindowsServerVersion
    - Label:
        default: Active Directory Configuration
      Parameters:
      - ADServer1PrivateIP
      - ADServer2PrivateIP
      - DomainDNSName
      - DomainNetBIOSName
      - DomainAdminPassword
      - DomainAdminUser
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
      - QSS3BucketName
      - QSS3BucketRegion
      - QSS3KeyPrefix
    - Label:
        default: Citrix XenApp/XenDesktop Configuration
      Parameters:
      - CitrixDeliveryController1HostName
      - CitrixDeliveryController2HostName
      - CitrixVDAHostName
    ParameterLabels:
      ADServer1PrivateIP:
        default: Domain Controller 1 Private IP Address
      ADServer2PrivateIP:
        default: Domain Controller 2 Private IP Address
      CitrixAPIClientID:
        default: Citrix Cloud Secure Client ID
      CitrixAPIClientSecret:
        default: Citrix Cloud Secure Client Secret
      CitrixCustomerId:
        default: Citrix Cloud Customer ID
      CitrixHostingConnectionName:
        default: Citrix Hosting Connection Name
      CitrixCatalogName:
        default: Citrix Catalog Name
      CitrixDeliveryGroupName:
        default: Citrix Catalog Connection Name
      CitrixHostingConnectionAWSIAMAccessKey:
        default: IAM User to be used with Citrix MCS and Hosting Configuration as
          CTX140429.
      CitrixHostingConnectionAWSIAMSecretKey:
        default: IAM User to be used with Citrix MCS and Hosting Configuration as
          CTX140429.
      CitrixDeliveryController1HostName:
        default: Citrix Delivery Controller 1 Name
      CitrixDeliveryController2HostName:
        default: Citrix Delivery Controller 2 Name
      CitrixResourceLocation:
        default: Citrix Cloud Resource Location
      CitrixVDAHostName:
        default: Citrix VDA Name
      DomainAdminPassword:
        default: Domain Admin Password
      DomainAdminUser:
        default: Domain Admin User Name
      DomainDNSName:
        default: Domain DNS Name
      DomainNetBIOSName:
        default: Domain NetBIOS Name
      KeyPairName:
        default: Key Pair Name
      PrivateVDASubnet1:
        default: Private Citrix VDA Subnet 1 ID
      PrivateVDASubnet2:
        default: Private Citrix VDA Subnet 2 ID
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      CitrixVDAInstanceType:
        default: Citrix Server VDA Instance Type
      CitrixVDAWindowsServerVersion:
        default: Windows Server Version for Citrix Server VDA
Parameters:
  ADServer1PrivateIP:
    Type: String
  ADServer2PrivateIP:
    Type: String
  CitrixAPIClientID:
    Type: String
    NoEcho: 'true'
  CitrixAPIClientSecret:
    Type: String
    NoEcho: 'true'
  CitrixCustomerId:
    Type: String
  CitrixDeliveryController1HostName:
    Type: String
    Default: CTX-DC1
  CitrixDeliveryController2HostName:
    Type: String
    Default: CTX-DC2
  CitrixHostingConnectionAWSIAMAccessKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: CitrixQSAccessKey
    NoEcho: 'true'
  CitrixHostingConnectionAWSIAMSecretKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: CitrixQSSecretKey
    NoEcho: 'true'
  CitrixResourceLocation:
    Type: String
    Default: AWS-QuickStart
    Description: Created during deployment.  Must be unique.
  CitrixHostingConnectionName:
    Type: String
    Default: AWS-QuickStart
    Description: Created during deployment.  Must be unique.
  CitrixCatalogName:
    Type: String
    Default: CAT-AWS-QuickStart
    Description: Created during deployment.  Must be unique.
  CitrixDeliveryGroupName:
    Type: String
    Default: DG-AWS-QuickStart
    Description: Created during deployment.  Must be unique.
  CitrixVDAHostName:
    Type: String
    Default: CTX-VDA1
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9\-]+\..+'
    Default: example.com
    Description: Fully qualified domain name (FQDN) of the forest root domain e.g.
      example.com
    MaxLength: '255'
    MinLength: '2'
    Type: String
  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    Default: example
    Description: NetBIOS name of the domain (up to 15 characters) for users of earlier
      versions of Windows e.g. EXAMPLE
    MaxLength: '15'
    MinLength: '1'
    Type: String
  DomainAdminPassword:
    Type: String
    NoEcho: 'true'
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: admin
    Description: 'User name for the account that will be added as Domain Administrator.
      This is separate from the default "Administrator" account. Note: Use admin if
      using managed AD.'
    MaxLength: '25'
    MinLength: '5'
    Type: String
  KeyPairName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair used to get the Administrator password
      for the instance
    Type: AWS::EC2::KeyPair::KeyName
  PrivateVDASubnet1:
    Type: AWS::EC2::Subnet::Id
    MinLength: '1'
  PrivateVDASubnet2:
    Type: AWS::EC2::Subnet::Id
    MinLength: '1'
  QSDeploymentID:
    Type: AWS::SSM::Parameter::Value<String>
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-), but should not
      start or end with a hyphen. You can specify your own bucket if you copy all
      of the assets and submodules into it, if you want to override the Quick Start
      behavior for your specific implementation.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-citrix-virtualapps-service/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  CitrixVDAInstanceType:
    Default: m5.large
    Type: String
    AllowedValues:
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - g3.4xlarge
    - g3.8xlarge
    - g3.16xlarge
  CitrixVDASecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  CitrixVDAWindowsServerVersion:
    Description: Version of preferred Windows Server for the Citrix Cloud Connectors.
    Type: String
    Default: WS2016FULLBASE
    AllowedValues:
    - WS2012R2
    - WS2016FULLBASE
Mappings:
  AWSAMIRegionMap:
    AMI:
      WS2012R2: Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.07.12
      WS2016FULLBASE: Windows_Server-2016-English-Full-Base-2019.07.12
    ap-northeast-1:
      WS2012R2: ami-0b0c9f033e6f44b78
      WS2016FULLBASE: ami-0cd7a835d20a5fa3e
    ap-northeast-2:
      WS2012R2: ami-018c1bdd5432a6a74
      WS2016FULLBASE: ami-0515c11fbe1299f0a
    ap-northeast-3:
      WS2012R2: ami-0d50f82e89b49ce12
      WS2016FULLBASE: ami-09750f3492b7762ed
    ap-south-1:
      WS2012R2: ami-02498810fdfa4b932
      WS2016FULLBASE: ami-0996674586963828d
    ap-southeast-1:
      WS2012R2: ami-031aa60a13feb802b
      WS2016FULLBASE: ami-0c9be38028c474d31
    ap-southeast-2:
      WS2012R2: ami-05a48d1d20102801e
      WS2016FULLBASE: ami-0359bda8e2d189644
    ca-central-1:
      WS2012R2: ami-00e9db447655e113f
      WS2016FULLBASE: ami-083db6415ff4ab7b1
    eu-central-1:
      WS2012R2: ami-00c3f464096640ebc
      WS2016FULLBASE: ami-065377970c7b7369b
    eu-west-1:
      WS2012R2: ami-0c6f7f1b00ea4dcb1
      WS2016FULLBASE: ami-0e59f5ff8749f81c8
    eu-west-2:
      WS2012R2: ami-047ff8007ad2221c4
      WS2016FULLBASE: ami-05cf35bf39c3c0d6d
    eu-west-3:
      WS2012R2: ami-02ec9744c1383e84d
      WS2016FULLBASE: ami-08f9a552e55285f32
    sa-east-1:
      WS2012R2: ami-0219a20514f1572d8
      WS2016FULLBASE: ami-02d888aa9faa1017b
    us-east-1:
      WS2012R2: ami-01b670d1a5b2c1da7
      WS2016FULLBASE: ami-0cc5ea3dde5301489
    us-east-2:
      WS2012R2: ami-04fe13467029c1627
      WS2016FULLBASE: ami-0a16ffe32a92704ea
    us-west-1:
      WS2012R2: ami-060a37a22181acf41
      WS2016FULLBASE: ami-0aa89f1b833336bf6
    us-west-2:
      WS2012R2: ami-08d5ef742d7b43c8b
      WS2016FULLBASE: ami-0f9cc35d712b86a4f
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']

Resources:
  VDA:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref VDARole
          buckets: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        configSets:
          config:
          - CFNsetup
          - QuickStartSetup
          - rename
          - domainjoin
          - installVDA
          - finalize
        CFNsetup:
          files:
            c:\cfn\cfn-hup.conf:
              content:
                !Join
                - ''
                - - '[main]

                    '
                  - stack=
                  - !Ref AWS::StackId
                  - '

                    '
                  - region=
                  - !Ref AWS::Region
                  - '

                    '
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content:
                !Join
                - ''
                - - '[cfn-auto-reloader-hook]

                    '
                  - 'triggers=post.update

                    '
                  - 'path=Resources.VDA.Metadata.AWS::CloudFormation::Init

                    '
                  - 'action=cfn-init.exe -v -s '
                  - !Ref AWS::StackId
                  - ' -r VDA'
                  - ' --region '
                  - !Ref AWS::Region
                  - '

                    '
          commands:
            a-set-execution-policy:
              command: powershell.exe -command Set-ExecutionPolicy RemoteSigned
              waitAfterCompletion: '0'
        QuickStartSetup:
          files:
            C:\cfn\scripts\Unzip-Archive.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            C:\cfn\modules\AWSQuickStart.zip:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\modules\Citrix.zip:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}modules/Citrix.zip'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
          commands:
            a-unpack-quickstart-module:
              command: powershell.exe -Command C:\cfn\scripts\Unzip-Archive.ps1 -Source
                C:\cfn\modules\AWSQuickStart.zip -Destination C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
              waitAfterCompletion: '0'
            b-unpack-citrix-module:
              command: powershell.exe -Command C:\cfn\scripts\Unzip-Archive.ps1 -Source
                C:\cfn\modules\Citrix.zip -Destination C:\Windows\system32\WindowsPowerShell\v1.0\Modules\
              waitAfterCompletion: '0'
        rename:
          commands:
            a-execute-powershell-script-RenameComputer:
              command: !Sub |
                powershell.exe -Command Rename-Computer -NewName '${CitrixVDAHostName}-${QSDeploymentID}' -Restart
              waitAfterCompletion: forever
        domainjoin:
          files:
            c:\cfn\scripts\Set-Dns.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\scripts\Join-Domain.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
          commands:
            a-set-dns:
              command: !Sub |
                powershell.exe c:\cfn\scripts\Set-Dns.ps1 ${ADServer1PrivateIP} ${ADServer2PrivateIP}
              waitAfterCompletion: '30'
            b-join-domain:
              command: !Sub |
                powershell.exe c:\cfn\scripts\Join-Domain.ps1 ${DomainDNSName} ${DomainNetBIOSName}\${DomainAdminUser} '${DomainAdminPassword}'
              waitAfterCompletion: forever
        installVDA:
          files:
            c:\cfn\scripts\VDAServerSetup.exe:
              source: https://s3.us-east-2.amazonaws.com/ctxs-vda-installer/vda/VDAServerSetup_1903.exe
            C:\cfn\scripts\Prep-VDA.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/Prep-VDA.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\scripts\Install-VDA.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/Install-VDA.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\scripts\Set-CitrixCloud.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/Set-CitrixCloud.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\scripts\DisableIEESC.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/DisableIEESC.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            c:\cfn\scripts\Enable-CredSSP.ps1:
              source:
                !Sub
                  - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1'
                  - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                    S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
          commands:
            a-DisableIEESC:
              command: powershell C:\cfn\scripts\DisableIEESC.ps1
              waitAfterCompletion: '0'
            b-Enable-CredSSP:
              command: powershell -command c:\cfn\scripts\Enable-CredSSP.ps1
              waitAfterCompletion: '0'
            c-Prep-VDA:
              command: powershell.exe -ExecutionPolicy Unrestricted C:\cfn\scripts\Prep-VDA.ps1
              waitAfterCompletion: '0'
            d-reboot:
              command: powershell.exe -Command Restart-Computer -Force
              waitAfterCompletion: forever
            e-Install-VDA:
              command: !Sub |
                powershell -command C:\cfn\scripts\Install-VDA.ps1 "-VDA_MediaName VDAServerSetup.exe -VDA_MediaLocation c:\cfn\scripts -VDA_Controller1 ${CitrixDeliveryController1HostName} -VDA_Controller2 ${CitrixDeliveryController2HostName} -VDA_DNSDomainName ${DomainDNSName}"
              waitAfterCompletion: '0'
            f-reboot:
              command: powershell.exe -Command Restart-Computer -Force
              waitAfterCompletion: forever
            g-download-SDK:
              command: powershell.exe -ExecutionPolicy Unrestricted -Command Start-BitsTransfer -Source https://download.apps.cloud.com/CitrixPoshSdk.exe -Destination C:\cfn\CitrixPoshSdk.exe
              waitaftercompletion: '60'
            h-Install-SDK:
              command: powershell.exe -ExecutionPolicy Unrestricted -Command Start-Process -FilePath "C:\cfn\CitrixPoshSdk.exe" -ArgumentList "/q"
              waitaftercompletion: '180'
            i-reboot:
              command: powershell.exe -Command Restart-Computer -Force
              waitAfterCompletion: forever
            j-Set-CitrixCloud:
              command: !Sub |
                powershell -ExecutionPolicy Unrestricted -command C:\cfn\scripts\Set-CitrixCloud.ps1 -CtxCustomerId '${CitrixCustomerId}' -CtxClientID '${CitrixAPIClientID}' -CtxClientSecret '${CitrixAPIClientSecret}' -QSDeploymentID '${QSDeploymentID}' -CtxResourceLocationName '${CitrixResourceLocation}' -AWSAPIKey '${CitrixHostingConnectionAWSIAMAccessKey}' -AWSSecretKey '${CitrixHostingConnectionAWSIAMSecretKey}' -AWSRegion ${AWS::Region} -CtxZoneName '${CitrixResourceLocation}' -CtxHostingConnectionName '${CitrixHostingConnectionName}' -CtxCatalogName '${CitrixCatalogName}' -CtxDeliveryGroupName '${CitrixDeliveryGroupName}' -DomainNetBIOSName '${DomainNetBIOSName}' -DomainAdminUser '${DomainAdminUser}' -DomainAdminPassword '${DomainAdminPassword}' -AddCurrentMachine
              waitAfterCompletion: '0'
            k-scheduleTargetOSOptimizerOnNextBoot:
              command: reg ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce"
                /v "CitrixTargetOSOptimizer" /t REG_SZ /d "C:\PROGRA~1\Citrix\PvsVm\TargetOSOptimizer\TargetOSOptimizer.exe
                /q" /f
              waitAfterCompletion: '0'
            l-reboot:
              command: powershell.exe -Command Restart-Computer -Force
              waitAfterCompletion: forever
        finalize:
          commands:
            z-signal-success:
              command: !Sub |
                cfn-signal.exe -e 0 "${VDAWaitHandle}"
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - c:\cfn\cfn-hup.conf
                - c:\cfn\hooks.d\cfn-auto-reloader.conf
    Properties:
      IamInstanceProfile: !Ref VDAProfile
      InstanceType: !Ref CitrixVDAInstanceType
      ImageId:
        !FindInMap
        - AWSAMIRegionMap
        - !Ref AWS::Region
        - !Ref CitrixVDAWindowsServerVersion
      SecurityGroupIds:
      - !Ref CitrixVDASecurityGroup
      KeyName: !Ref KeyPairName
      SubnetId: !Ref PrivateVDASubnet1
      Tags:
      - Key: Name
        Value: !Sub ${CitrixVDAHostName}-${QSDeploymentID}
      - Key: App
        Value: Citrix
      - Key: QSDeplomentID
        Value: !Sub ${QSDeploymentID}
      UserData:
        !Base64
          Fn::Join:
          - ''
          - - '<script>

              '
            - 'cfn-init.exe -v -s '
            - !Ref AWS::StackId
            - ' -r VDA'
            - ' --region '
            - !Ref AWS::Region
            - ' --configsets config'
            - ''
            - </script>
  VDAWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  VDAWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: VDA
    Properties:
      Handle: !Ref VDAWaitHandle
      Timeout: '5400'
  VDARole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - s3:GetObject
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
            Effect: Allow
        PolicyName: aws-quick-start-s3-policy
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Principal:
            Service:
            - ec2.amazonaws.com
          Effect: Allow
        Version: 2012-10-17
  VDAProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref VDARole
      Path: /
Outputs:
  CitrixVDAInstanceID:
    Description: VDA EC2 instance ID
    Value: !Ref VDA
  CitrixVDAHostName:
    Value: !Sub ${CitrixVDAHostName}-${QSDeploymentID}
  CitrixHostingConnectionName:
    Description: Citrix Hosting Connection Name
    Value: !Sub ${CitrixHostingConnectionName}-${QSDeploymentID}
  CitrixCatalogName:
    Description: Citrix Catalog Name
    Value: !Sub ${CitrixCatalogName}-${QSDeploymentID}
  CitrixDeliveryGroupName:
    Description: Citrix Delivery Group Name
    Value: !Sub ${CitrixDeliveryGroupName}-${QSDeploymentID}
...
